import * as R from 'ramda';
import { getObjById, objValuesToArr } from 'helpers/helpers';

export const getQuadcopterById = (state, id) => getObjById(id, state.quadcopters); 

export const getQuadcopters = (state, ownProps) => {

    // const quadcopters = state.quadcoptersPage.ids.map(id => getQuadcopterById(state, id));
    // return quadcopters

    const activeCategoryId = getActiveCategoryId(ownProps);

    const applySearch = item => R.contains(
        state.quadcoptersPage.search,
        R.prop('name', item)
    )
    const applyCategory = item => R.equals(
        activeCategoryId,
        R.prop('categoryId', item)
    )

    const quadcopters = R.compose(
        R.filter(applySearch),
        R.when(R.always(activeCategoryId), R.filter(applyCategory)),
        R.map(id => getQuadcopterById(state, id))
    )(state.quadcoptersPage.ids)

    return quadcopters
}

export const getRenderedQuadcoptersLength = state => state.quadcoptersPage.ids.length;

export const getTotalBasketCount = state => state.basket.length;

export const getTotalBasketPrice = state => {
    const totalPrice = R.compose(
        R.sum,
        R.pluck('price'),
        R.map(id => getQuadcopterById(state, id))
    )(state.basket)

    return totalPrice
}

export const getCategories = state => objValuesToArr(state.categories);

export const getActiveCategoryId = ownProps => ownProps.match.params.id;
