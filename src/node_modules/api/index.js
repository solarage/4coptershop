import { getObjInArrById } from 'helpers/helpers';

const quadcoptersUrl = 'http://www.mocky.io/v2/5b8852312e0000cf3905fd7f';
const categoriesUrl = 'http://www.mocky.io/v2/5b88526b2e0000c73705fd81';
const infoMessage = 'To test REST API, this app uses the mocky.io service, which only supports HTTP requests. Necessary: Disable protection on this page for Mozilla Firefox (icon in the address bar) / Enable the loading of unsafe scripts for Google Chrome (icon in the address bar). Disable "HTTPS Everywhere" extension, if there is.';

export const fetchQuadcopters = async () => {

    console.warn(infoMessage);

    let status = (response) => {
        if(response.status !== 200) {
            return Promise.reject(new Error(response.stats.text))
        }
        return Promise.resolve(response)
    };

    let json = (response) => response.json();

    return new Promise( resolve => {

        fetch(quadcoptersUrl)
            .then(status)
            .then(json)
            .then((data) => {
                resolve(data.quadcopters);
            })
            .catch((error) => {
                console.log('Error', error)
            })
    }) 
};

export const loadMoreQuadcopters = async ({ offset }) => {

    let status = (response) => {
        if(response.status !== 200) {
            return Promise.reject(new Error(response.stats.text))
        }
        return Promise.resolve(response)
    };

    let json = (response) => response.json();

    return new Promise( resolve => {

        fetch(quadcoptersUrl)
            .then(status)
            .then(json)
            .then((data) => {
                resolve(data.quadcopters);
            })
            .catch((error) => {
                console.log('Error', error)
            })       
    }) 
};

export const fetchQuadcopterById = async id => {

    let status = (response) => {
        if(response.status !== 200) {
            return Promise.reject(new Error(response.stats.text))
        }
        return Promise.resolve(response)
    };

    let json = (response) => response.json();

    return new Promise( resolve => {

        fetch(quadcoptersUrl)
            .then(status)
            .then(json)
            .then((data) => {
                const quadcopter = getObjInArrById(id, data.quadcopters);

                resolve(quadcopter);
            })
            .catch((error) => {
                console.log('Error', error)
            })      
    }) 
};

export const fetchCategories = async() => {

    let status = (response) => {
        if(response.status !== 200) {
            return Promise.reject(new Error(response.stats.text))
        }
        return Promise.resolve(response)
    };

    let json = (response) => response.json();

    return new Promise( resolve => {

        fetch(categoriesUrl)
            .then(status)
            .then(json)
            .then((data) => {
                resolve(data.categories);
            })
            .catch((error) => {
                console.log('Error', error)
            })       
    }) 
};